# Generated by Django 3.2.9 on 2022-01-30 15:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Undefined', max_length=25, verbose_name='Name')),
                ('origin', models.CharField(choices=[('Social', 'Social'), ('Industrial', 'Industrial'), ('Money', 'Money'), ('Undefined', 'UNDEFINED')], default='Undefined', max_length=20)),
                ('usage', models.CharField(choices=[('Production', 'Production'), ('Consumption', 'Consumption'), ('Money', 'Money'), ('Sales', 'Sales'), ('Undefined', 'UNDEFINED')], default='Undefined', max_length=25, verbose_name='Usage')),
                ('size', models.FloatField(default=0, verbose_name='Quantity')),
                ('total_value', models.FloatField(default=0, verbose_name='Total Price')),
                ('total_price', models.FloatField(default=0, verbose_name='Total Value')),
                ('unit_value', models.FloatField(default=1, verbose_name='Unit Value')),
                ('unit_price', models.FloatField(default=1, verbose_name='Unit Price')),
                ('turnover_time', models.FloatField(default=360, verbose_name='Turnover Time')),
                ('demand', models.FloatField(default=0, verbose_name='Demand')),
                ('supply', models.FloatField(default=0, verbose_name='Supply')),
                ('allocation_ratio', models.FloatField(default=1, verbose_name='Allocation Ratio')),
                ('display_order', models.IntegerField(default=1, null=True)),
                ('image_name', models.CharField(default='Undefined', max_length=25)),
                ('tooltip', models.CharField(default='Undefined', max_length=50)),
                ('monetarily_effective_demand', models.FloatField(default=0)),
                ('investment_proportion', models.FloatField(default=0)),
            ],
            options={
                'verbose_name': 'Commodity',
                'verbose_name_plural': 'Commodities',
                'ordering': ['time_stamp_FK'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=1)),
                ('description', models.CharField(default='demand', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='StockOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Undefined', max_length=50)),
                ('stock_owner_type', models.CharField(choices=[('Industry', 'Industry'), ('Social Class', 'Social Class'), ('Undefined', 'UNDEFINED')], default='Undefined', max_length=20)),
                ('commodity_FK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='economy_stockowner_related', to='economy.commodity')),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('stockowner_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='economy.stockowner')),
                ('output_scale', models.IntegerField(default=1, verbose_name='Output')),
                ('output_growth_rate', models.IntegerField(default=1, verbose_name='Growth Rate')),
                ('initial_capital', models.FloatField(default=0)),
                ('work_in_progress', models.FloatField(default=0)),
                ('current_capital', models.FloatField(default=0)),
                ('profit', models.FloatField(default=0)),
                ('profit_rate', models.FloatField(default=0)),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industries',
            },
            bases=('economy.stockowner',),
        ),
        migrations.CreateModel(
            name='SocialClass',
            fields=[
                ('stockowner_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='economy.stockowner')),
                ('population', models.IntegerField(default=1000, verbose_name='Population')),
                ('participation_ratio', models.FloatField(default=1, verbose_name='Participation Ratio')),
                ('consumption_ratio', models.FloatField(default=1, verbose_name='Consumption Ratio')),
                ('revenue', models.FloatField(default=0, verbose_name='Revenue')),
                ('assets', models.FloatField(default=0, verbose_name='Assets')),
            ],
            options={
                'verbose_name': 'Social Class',
                'verbose_name_plural': 'Social Classes',
            },
            bases=('economy.stockowner',),
        ),
        migrations.CreateModel(
            name='Trace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_stamp_id', models.IntegerField(default=0)),
                ('period', models.IntegerField(default=0)),
                ('stage', models.CharField(default='Undefined', max_length=25)),
                ('step', models.CharField(default='Undefined', max_length=25)),
                ('project_id', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=0)),
                ('message', models.CharField(max_length=250)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TimeStamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_number', models.IntegerField(default=1)),
                ('time_stamp', models.IntegerField(default=1)),
                ('step', models.CharField(default='Undefined', max_length=50)),
                ('stage', models.CharField(default='Undefined', max_length=50)),
                ('period', models.IntegerField(default=1)),
                ('melt', models.CharField(default='Undefined', max_length=50)),
                ('population_growth_rate', models.IntegerField(default=1)),
                ('investment_ratio', models.IntegerField(default=1)),
                ('labour_supply_response', models.CharField(default='Undefined', max_length=50)),
                ('price_response_type', models.CharField(default='Undefined', max_length=50)),
                ('melt_response_type', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('currency_symbol', models.CharField(default='$', max_length=2)),
                ('quantity_symbol', models.CharField(default='#', max_length=2)),
                ('comparator_time_stamp_FK', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='economy.timestamp')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['project_number', 'time_stamp'],
            },
        ),
        migrations.AddField(
            model_name='stockowner',
            name='time_stamp_FK',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='economy_stockowner_related', to='economy.timestamp'),
        ),
        migrations.AddField(
            model_name='stockowner',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_type', models.CharField(choices=[('Production', 'Production'), ('Consumption', 'Consumption'), ('Money', 'Money'), ('Sales', 'Sales'), ('Undefined', 'UNDEFINED')], default='Undefined', max_length=50)),
                ('owner_type', models.CharField(choices=[('Industry', 'Industry'), ('Social Class', 'Social Class'), ('Undefined', 'UNDEFINED')], default='Undefined', max_length=20)),
                ('size', models.FloatField(default=0)),
                ('stock_owner_name', models.CharField(default='Undefined', max_length=50)),
                ('value', models.FloatField(default=0)),
                ('price', models.FloatField(default=0)),
                ('demand', models.FloatField(default=0)),
                ('supply', models.FloatField(default=0)),
                ('monetary_demand', models.FloatField(default=0)),
                ('commodity_FK', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='economy.commodity')),
                ('stock_owner_FK', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='economy.stockowner')),
                ('time_stamp_FK', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='economy_stock_related', to='economy.timestamp')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='commodity',
            name='time_stamp_FK',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commodity', to='economy.timestamp'),
        ),
        migrations.AddField(
            model_name='commodity',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='current_time_stamp',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_time_stamp', to='economy.timestamp'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='SocialStock',
            fields=[
                ('stock_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='economy.stock')),
                ('consumption_requirement', models.FloatField(default=0)),
                ('social_class_FK', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_stock', to='economy.socialclass')),
            ],
            options={
                'verbose_name': 'Social Stock',
                'verbose_name_plural': 'Social Stocks',
            },
            bases=('economy.stock',),
        ),
        migrations.CreateModel(
            name='IndustryStock',
            fields=[
                ('stock_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='economy.stock')),
                ('production_requirement', models.FloatField(default=0)),
                ('industry_FK', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='economy.industry')),
            ],
            options={
                'verbose_name': 'Industry Stock',
                'verbose_name_plural': 'Industry Stocks',
            },
            bases=('economy.stock',),
        ),
    ]
